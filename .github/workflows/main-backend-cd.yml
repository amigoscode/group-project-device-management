name: CD - Deploy Main Backend

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - backend/device-management-main/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      mqtt:
        image: eclipse-mosquitto:2.0.15
        volumes:
          - ./mosquitto/config:/mosquitto/config
          - ./mosquitto/data:/mosquitto/data
          - ./mosquitto/log:/mosquitto/log
        ports:
          - 1883:1883
          - 9001:9001
      mongodb-it:
        image: mongo:6.0
        env:
          MONGO_INITDB_ROOT_USERNAME: rootuser
          MONGO_INITDB_ROOT_PASSWORD: rootpass
        ports:
          - 27016:27017
#        options: >-
#          --health-cmd "mongo localhost:27017/test --quiet --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'"
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
    defaults:
      run:
        working-directory: ./backend/device-management-main

    steps:
      - uses: actions/checkout@v3
      - name: Slack commit message and sha
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":":github: https://github.com/amigoscode/group-project-device-management/commit/${{ github.sha }} - ${{ github.event.head_commit.message }}"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":"Deployment started :progress_bar: :fingerscrossed:"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: Set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":maven: Building with Maven"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Build Package Push with Maven
        run: mvn -ntp -B verify -Ddocker.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}} jib:build
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":docker: Image tag:${{steps.build-number.outputs.BUILD_NUMBER}} pushed to https://hub.docker.com/repository/docker/rafalnowak444/device-management"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
#      - name: Update Dockerrun.aws.json api image tag with new build number
#        run: |
#          echo "Dockerrun.aws.json before updating tag"
#          cat ../Dockerrun.aws.json
#          sed -i -E 's_(amigoscode/amigoscode-api:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' ../Dockerrun.aws.json
#          echo "Dockerrun.aws.json after updating tag"
#          cat ../Dockerrun.aws.json
#      - name: Send Slack Message
#        run: >
#          curl -X POST -H 'Content-type: application/json' 
#          --data '{"text":":aws: Starting deployment to Elastic Beanstalk"}' 
#          ${{ secrets.SLACK_WEBHOOK_URL }}
#      - name: Deploy to Elastic Beanstalk
#        uses: einaregilsson/beanstalk-deploy@v21
#        with:
#          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          application_name: ${{ secrets.EB_APPLICATION_NAME }}
#          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
#          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
#          version_description: ${{ github.SHA }}
#          region: ${{ secrets.EB_REGION }}
#          deployment_package: Dockerrun.aws.json
#      - name: Send Slack Message
#        run: >
#          curl -X POST -H 'Content-type: application/json' 
#          --data '{"text":":githubloading: Committing to repo https://github.com/amigoscode/spring-boot-full-stack/"}' 
#          ${{ secrets.SLACK_WEBHOOK_URL }}
#      - name: Commit and push Dockerrun.aws.json
#        run: |
#          git config user.name github-actions
#          git config user.email github-actions@github.com
#          git add ../Dockerrun.aws.json
#          git commit -m "Update Dockerrun.aws.json docker image with new tag ${{ steps.build-number.outputs.BUILD_NUMBER }}"
#          git push
#      - name: Send Slack Message
#        run: >
#          curl -X POST -H 'Content-type: application/json' 
#          --data '{"text":"Deployment and commit completed :github-check-mark: :party_blob: - http://amigoscodeapi-env.eba-ymxutmev.eu-west-1.elasticbeanstalk.com/"}' 
#          ${{ secrets.SLACK_WEBHOOK_URL }}
#      - name: Send Slack Message
#        if: always()
#        run: >
#          curl -X POST -H 'Content-type: application/json' 
#          --data '{"text":"Job Status ${{ job.status }}"}' 
#          ${{ secrets.SLACK_WEBHOOK_URL }}
