package com.amigoscode.devicemanagement.external.storage.measurement;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;
import com.amigoscode.devicemanagement.external.storage.utils.ZonedDateTimeConverter;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import java.time.ZonedDateTime;

@DynamoDBTable(tableName = "Measurements")
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Getter
@Setter
public
class MeasurementEntity {

//    @Id
    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    private String id;

    @DynamoDBAttribute
    String deviceId;
    @DynamoDBAttribute
    Float temperature;
    @DynamoDBAttribute
    Float pressure;
    @DynamoDBAttribute
    Float humidity;
    @DynamoDBAttribute
    WindDao wind;
    @DynamoDBAttribute
    LocationDao location;
    @DynamoDBTypeConverted(converter = ZonedDateTimeConverter.class)
    @DynamoDBAttribute
    ZonedDateTime timestamp;


    public MeasurementEntity(final String deviceId,
                      final Float temperature,
                      final Float pressure,
                      final Float humidity,
                      final WindDao wind,
                      final LocationDao location,
                      final ZonedDateTime timestamp) {
        this.deviceId = deviceId;
        this.temperature = temperature;
        this.pressure = pressure;
        this.humidity = humidity;
        this.wind = wind;
        this.location = location;
        this.timestamp = timestamp;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        MeasurementEntity that = (MeasurementEntity) o;
        return id.equals(that.id);
    }
    @Override
    public int hashCode() {
        return 0;
    }
}
