package com.amigoscode.devicemanagement.external.storage.devicesetting;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;
import com.amigoscode.devicemanagement.external.storage.utils.ZonedDateTimeConverter;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import java.time.ZonedDateTime;

@DynamoDBTable(tableName = "DeviceSettings")
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Getter
@Setter
public class DeviceSettingEntity {

    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    private String  id;

    @DynamoDBAttribute
    private String deviceId;

    @DynamoDBAttribute
    private Integer measurementPeriod;
    @DynamoDBAttribute
    private Boolean isMeasurementEnabled;
    @DynamoDBTypeConverted(converter = ZonedDateTimeConverter.class)
    @DynamoDBAttribute
    private ZonedDateTime createdAt;
    @DynamoDBTypeConverted(converter = ZonedDateTimeConverter.class)
    @DynamoDBAttribute
    private ZonedDateTime deletedAt;
    @DynamoDBTypeConverted(converter = ZonedDateTimeConverter.class)
    @DynamoDBAttribute
    private ZonedDateTime updatedAt;
    @DynamoDBAttribute
    private String updatedBy;


    public DeviceSettingEntity(String deviceId, Integer measurementPeriod, Boolean isMeasurementEnabled) {
        this.deviceId = deviceId;
        this.measurementPeriod = measurementPeriod;
        this.isMeasurementEnabled = isMeasurementEnabled;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        DeviceSettingEntity that = (DeviceSettingEntity) o;
        return id.equals(that.id);
    }

    @Override
    public int hashCode() {
        return 0;
    }

}
